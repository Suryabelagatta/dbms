-- User table
CREATE TABLE User (
    UserID INT PRIMARY KEY,
    Username VARCHAR(50) UNIQUE,
    Password VARCHAR(255),
    Email VARCHAR(100),
    UserType ENUM('Farmer', 'Consumer'),
    RegistrationDate DATE,
    -- Add other attributes as needed
    CONSTRAINT chk_UserType CHECK (UserType IN ('Farmer', 'Consumer'))
);

-- Farmer table
CREATE TABLE Farmer (
    FarmerID INT PRIMARY KEY,
    UserID INT UNIQUE,
    FarmName VARCHAR(50),
    Location VARCHAR(255),
    ContactInfo VARCHAR(15),
    Description TEXT,
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);

-- Product table
CREATE TABLE Product (
    ProductID INT PRIMARY KEY,
    FarmerID INT,
    ProductName VARCHAR(50),
    Description TEXT,
    Price DECIMAL(10, 2),
    QuantityAvailable INT,
    Images VARCHAR(255), -- Assuming a path to images
    FOREIGN KEY (FarmerID) REFERENCES Farmer(FarmerID)
);



-- Consumer table
CREATE TABLE Consumer (
    ConsumerID INT PRIMARY KEY,
    UserID INT UNIQUE,
    FullName VARCHAR(100),
    Address VARCHAR(255),
    ContactInfo VARCHAR(15),
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);

-- Order table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ConsumerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2),
    OrderStatus VARCHAR(20),
    FOREIGN KEY (ConsumerID) REFERENCES Consumer(ConsumerID)
);

-- OrderItem table
CREATE TABLE OrderItem (
    OrderItemID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Subtotal DECIMAL(10, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);


CREATE TABLE Review (
    ReviewID INT PRIMARY KEY,
    ProductID INT,
    ConsumerID INT,
    Rating INT,
    Comments TEXT,
    Timestamp TIMESTAMP,
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
    FOREIGN KEY (ConsumerID) REFERENCES Consumer(ConsumerID)
);

CREATE TABLE Message (
    MessageID INT PRIMARY KEY,
    SenderID INT,
    ReceiverID INT,
    Content TEXT,
    Timestamp TIMESTAMP,
    FOREIGN KEY (SenderID) REFERENCES User(UserID),
    FOREIGN KEY (ReceiverID) REFERENCES User(UserID)
);


CREATE TABLE Payment (
    PaymentID INT PRIMARY KEY,
    OrderID INT,
    Amount DECIMAL(10, 2),
    PaymentMethod VARCHAR(50),
    TransactionStatus VARCHAR(20),
    Timestamp TIMESTAMP,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- inserting into user TABLE
INSERT INTO User (UserID, Username, Password, Email, UserType, RegistrationDate) VALUES
(101, 'farmer1', 'password1', 'john@example.com', 'Farmer', '2023-01-15'),
(102, 'farmer2', 'password2', 'mary@example.com', 'Farmer', '2023-02-20'),
(103, 'consumer1', 'password3', 'jane@example.com', 'Consumer', '2023-03-25');

INSERT INTO Product (ProductID, FarmerID, ProductName, Description, Price, QuantityAvailable, Images) VALUES 
    (1, 121, 'Apples', 'Fresh organic apples', 5.99, 100, 'apples.jpg'),
    (2, 125, 'Oranges', 'Juicy oranges', 4.49, 150, 'oranges.jpg'),
    (3, 127, 'Bananas', 'Ripe bananas', 3.99, 200, 'bananas.jpg'),
    (4, 135, 'Strawberries', 'Delicious strawberries', 6.99, 80, 'strawberries.jpg'),
    (5, 139, 'Tomatoes', 'Organic tomatoes', 2.99, 120, 'tomatoes.jpg'),
    (6, 139, 'groundnut', 'Fresh groundnut', 5.99, 100, 'groundnut.jpg'),
    (7, 140, 'Capsicum', 'Juicy capcicum', 4.49, 150, 'capsicum.jpg');